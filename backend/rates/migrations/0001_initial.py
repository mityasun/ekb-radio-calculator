# Generated by Django 5.0.4 on 2024-04-26 18:40

import django.core.validators
import django.db.models.deletion
import functools
import utils.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('settings', '0001_initial'),
        ('stations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default', models.BooleanField(default=False, verbose_name='По умолчанию')),
                ('block_position', models.CharField(max_length=100, unique=True, validators=[functools.partial(utils.validators.validate_text, *(), **{'max_length': 100})], verbose_name='Позиционирование в блоке')),
            ],
            options={
                'verbose_name': 'Позиционирование в блоке',
                'verbose_name_plural': 'Позиционирование в блоке',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='BlockPositionRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Коэффициент')),
                ('block_position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rates.blockposition', verbose_name='Позиционирование в блоке')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.radiostation', verbose_name='Радиостанция')),
            ],
            options={
                'verbose_name': 'Коэффициент позиционирования в блоке',
                'verbose_name_plural': 'Коэффициент позиционирования в блоке',
            },
        ),
        migrations.CreateModel(
            name='IntervalPrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000000)], verbose_name='Цена, руб.')),
                ('audio_duration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.audioduration', verbose_name='Хронометраж ролика')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.radiostation', verbose_name='Радиостанция')),
                ('time_interval', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.timeinterval', verbose_name='Часовой интервал')),
            ],
            options={
                'verbose_name': 'Цена часового интервала',
                'verbose_name_plural': 'Цены часовых интервалов',
            },
        ),
        migrations.CreateModel(
            name='MonthRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Коэффициент')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.month', verbose_name='Месяц')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.radiostation', verbose_name='Радиостанция')),
            ],
            options={
                'verbose_name': 'Сезонный коэффициент',
                'verbose_name_plural': 'Сезонные коэффициенты',
            },
        ),
        migrations.AddConstraint(
            model_name='blockpositionrate',
            constraint=models.UniqueConstraint(fields=('station', 'block_position'), name='blockpositionrate_unique'),
        ),
        migrations.AddConstraint(
            model_name='intervalprice',
            constraint=models.UniqueConstraint(fields=('station', 'time_interval', 'audio_duration'), name='intervalprice_unique'),
        ),
        migrations.AddConstraint(
            model_name='monthrate',
            constraint=models.UniqueConstraint(fields=('station', 'month'), name='monthrate_unique'),
        ),
    ]
